# dune fmt
# OCAMLPARAM: unset
# Shared cache: disabled
# Workspace root: /home/can/projects/ocaml-projects/ocamlproblems
# Auto-detected concurrency: 16
$ /home/can/.opam/5.0.0/bin/ocamlc.opt -config > /tmp/dune_9468ed_output
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dev
#  ; merlin = true
#  ; for_host = None
#  ; fdo_target_exe = None
#  ; build_dir = In_build_dir "default"
#  ; ocaml_bin = External "/home/can/.opam/5.0.0/bin"
#  ; ocaml = Ok External "/home/can/.opam/5.0.0/bin/ocaml"
#  ; ocamlc = External "/home/can/.opam/5.0.0/bin/ocamlc.opt"
#  ; ocamlopt = Ok External "/home/can/.opam/5.0.0/bin/ocamlopt.opt"
#  ; ocamldep = Ok External "/home/can/.opam/5.0.0/bin/ocamldep.opt"
#  ; ocamlmklib = Ok External "/home/can/.opam/5.0.0/bin/ocamlmklib.opt"
#  ; env =
#      map
#        { "DUNE_OCAML_HARDCODED" :
#            "/home/can/.opam/5.0.0/lib/ocaml:/home/can/.opam/5.0.0/lib"
#        ; "DUNE_OCAML_STDLIB" : "/home/can/.opam/5.0.0/lib/ocaml"
#        ; "DUNE_SOURCEROOT" :
#            "/home/can/projects/ocaml-projects/ocamlproblems"
#        ; "INSIDE_DUNE" :
#            "/home/can/projects/ocaml-projects/ocamlproblems/_build/default"
#        ; "OCAMLFIND_IGNORE_DUPS_IN" :
#            "/home/can/projects/ocaml-projects/ocamlproblems/_build/install/default/lib"
#        ; "OCAMLPATH" :
#            "/home/can/projects/ocaml-projects/ocamlproblems/_build/install/default/lib"
#        ; "OCAMLTOP_INCLUDE_PATH" :
#            "/home/can/projects/ocaml-projects/ocamlproblems/_build/install/default/lib/toplevel"
#        ; "OCAML_COLOR" : "always"
#        ; "OPAMCOLOR" : "always"
#        }
#  ; findlib_paths =
#      [ External "/home/can/.opam/5.0.0/lib/ocaml"
#      ; External "/home/can/.opam/5.0.0/lib"
#      ]
#  ; natdynlink_supported = true
#  ; supports_shared_libraries = true
#  ; ocaml_config =
#      { version = "5.0.0"
#      ; standard_library_default = "/home/can/.opam/5.0.0/lib/ocaml"
#      ; standard_library = "/home/can/.opam/5.0.0/lib/ocaml"
#      ; standard_runtime = "the_standard_runtime_variable_was_deleted"
#      ; ccomp_type = "cc"
#      ; c_compiler = "gcc"
#      ; ocamlc_cflags =
#          [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-pthread"; "-fPIC" ]
#      ; ocamlc_cppflags = [ "-D_FILE_OFFSET_BITS=64" ]
#      ; ocamlopt_cflags =
#          [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-pthread"; "-fPIC" ]
#      ; ocamlopt_cppflags = [ "-D_FILE_OFFSET_BITS=64" ]
#      ; bytecomp_c_compiler =
#          [ "gcc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-pthread"
#          ; "-fPIC"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ]
#      ; bytecomp_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_c_compiler =
#          [ "gcc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-pthread"
#          ; "-fPIC"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ]
#      ; native_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_pack_linker = [ "ld"; "-r"; "-o" ]
#      ; cc_profile = []
#      ; architecture = "amd64"
#      ; model = "default"
#      ; int_size = 63
#      ; word_size = 64
#      ; system = "linux"
#      ; asm = [ "as" ]
#      ; asm_cfi_supported = true
#      ; with_frame_pointers = false
#      ; ext_exe = ""
#      ; ext_obj = ".o"
#      ; ext_asm = ".s"
#      ; ext_lib = ".a"
#      ; ext_dll = ".so"
#      ; os_type = "Unix"
#      ; default_executable_name = "a.out"
#      ; systhread_supported = true
#      ; host = "x86_64-pc-linux-gnu"
#      ; target = "x86_64-pc-linux-gnu"
#      ; profiling = false
#      ; flambda = false
#      ; spacetime = false
#      ; safe_string = true
#      ; exec_magic_number = "Caml1999X032"
#      ; cmi_magic_number = "Caml1999I032"
#      ; cmo_magic_number = "Caml1999O032"
#      ; cma_magic_number = "Caml1999A032"
#      ; cmx_magic_number = "Caml1999Y032"
#      ; cmxa_magic_number = "Caml1999Z032"
#      ; ast_impl_magic_number = "Caml1999M032"
#      ; ast_intf_magic_number = "Caml1999N032"
#      ; cmxs_magic_number = "Caml1999D032"
#      ; cmt_magic_number = "Caml1999T032"
#      ; natdynlink_supported = true
#      ; supports_shared_libraries = true
#      ; windows_unicode = false
#      }
#  }
$ (cd _build/default && /home/can/.opam/5.0.0/bin/ocamlformat --impl test/ocamlproblems.ml) > _build/default/test/.formatted/ocamlproblems.ml
$ (cd _build/default && /home/can/.opam/5.0.0/bin/ocamlformat --impl bin/main.ml) > _build/default/bin/.formatted/main.ml
$ /usr/bin/git --no-pager diff --no-index --color=always -u _build/default/bin/main.ml _build/default/bin/.formatted/main.ml
> diff --git a/_build/default/bin/main.ml b/_build/default/bin/.formatted/main.ml
> index 8fff9d5..e979d92 100644
> --- a/_build/default/bin/main.ml
> +++ b/_build/default/bin/.formatted/main.ml
> @@ -1,51 +1,44 @@
> -let rec last list = match list with
> -| [] -> None
> -| [x] -> Some x
> -| _::xy -> last xy
> -
> -let rec last_one list = match list with
> -| [] -> None
> -| [_] -> last_one []
> -| [x;y] -> Some(x,y)
> -|  _::xy -> last_one xy
> -
> -let rec at list k = match list with 
> -| x::xy -> if k = 0 then Some x else at xy (k-1)
> -| [] -> None
> -
> -let length list = 
> -  let rec counter list k = match list with
> -  | [] -> k
> -  | _::xy -> counter xy (k+1)
> +let rec last list =
> +  match list with [] -> None | [ x ] -> Some x | _ :: xy -> last xy
> +
> +let rec last_one list =
> +  match list with
> +  | [] -> None
> +  | [ _ ] -> last_one []
> +  | [ x; y ] -> Some (x, y)
> +  | _ :: xy -> last_one xy
> +
> +let rec at list k =
> +  match list with
> +  | x :: xy -> if k = 0 then Some x else at xy (k - 1)
> +  | [] -> None
> +
> +let length list =
> +  let rec counter list k =
> +    match list with [] -> k | _ :: xy -> counter xy (k + 1)
>    in
> -  counter list 0 
> -
> -let rec rev list = match list with
> -| x::xy -> rev xy @ [x]
> -| [] -> []
> +  counter list 0
>  
> +let rec rev list = match list with x :: xy -> rev xy @ [ x ] | [] -> []
>  let palindrome list = if rev list == list then true else false
>  
> -type 'a node =
> -    | One of 'a 
> -    | Many of 'a node list
> -
> -let rec flatten list = match list with
> -| One a::xy -> [a] @ flatten xy
> -| Many a::xy -> flatten a @ flatten xy  
> -| [] -> [] 
> -
> -let compress liste = 
> -  let rec aux list acc last = match list,acc with
> -  | [],_ -> acc
> -  | x::xy,[] -> aux xy (acc@[x]) x
> -  |       x::xy,_ -> if x = last then aux xy acc last else aux xy (acc @ [x]) x 
> -  in  
> -  aux liste [] ""
> -
> +type 'a node = One of 'a | Many of 'a node list
>  
> +let rec flatten list =
> +  match list with
> +  | One a :: xy -> [ a ] @ flatten xy
> +  | Many a :: xy -> flatten a @ flatten xy
> +  | [] -> []
>  
> -let () = 
> -  let _ = last ["a";"b";"c"]
> +let compress liste =
> +  let rec aux list acc last =
> +    match (list, acc) with
> +    | [], _ -> acc
> +    | x :: xy, [] -> aux xy (acc @ [ x ]) x
> +    | x :: xy, _ -> if x = last then aux xy acc last else aux xy (acc @ [ x ]) x
>    in
> -  ()  
> +  aux liste [] ""
> +
> +let () =
> +  let _ = last [ "a"; "b"; "c" ] in
> +  ()
[1]
